// Code generated by mockery 2.7.4. DO NOT EDIT.

package mocks

import (
	context "context"

	logger "dev.azure.com/filimonovga/our-expenses/our-expenses-server/pkg/logger"
	mock "github.com/stretchr/testify/mock"
)

// LogInterface is an autogenerated mock type for the LogInterface type
type LogInterface struct {
	mock.Mock
}

// Error provides a mock function with given fields: ctx, msg, err
func (_m *LogInterface) Error(ctx context.Context, msg string, err error) {
	_m.Called(ctx, msg, err)
}

// ErrorWithFields provides a mock function with given fields: ctx, msg, err, fields
func (_m *LogInterface) ErrorWithFields(ctx context.Context, msg string, err error, fields logger.FieldsSet) {
	_m.Called(ctx, msg, err, fields)
}

// Errorf provides a mock function with given fields: ctx, format, err, args
func (_m *LogInterface) Errorf(ctx context.Context, format string, err error, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, ctx, format, err)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// ErrorfWithFields provides a mock function with given fields: ctx, format, err, fields, args
func (_m *LogInterface) ErrorfWithFields(ctx context.Context, format string, err error, fields logger.FieldsSet, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, ctx, format, err, fields)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// Info provides a mock function with given fields: ctx, msg
func (_m *LogInterface) Info(ctx context.Context, msg string) {
	_m.Called(ctx, msg)
}

// InfoWithFields provides a mock function with given fields: ctx, msg, fields
func (_m *LogInterface) InfoWithFields(ctx context.Context, msg string, fields logger.FieldsSet) {
	_m.Called(ctx, msg, fields)
}

// Infof provides a mock function with given fields: ctx, format, args
func (_m *LogInterface) Infof(ctx context.Context, format string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, ctx, format)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// InfofWithFields provides a mock function with given fields: ctx, format, fields, args
func (_m *LogInterface) InfofWithFields(ctx context.Context, format string, fields logger.FieldsSet, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, ctx, format, fields)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// Warn provides a mock function with given fields: ctx, msg
func (_m *LogInterface) Warn(ctx context.Context, msg string) {
	_m.Called(ctx, msg)
}

// WarnWithFields provides a mock function with given fields: ctx, msg, fields
func (_m *LogInterface) WarnWithFields(ctx context.Context, msg string, fields logger.FieldsSet) {
	_m.Called(ctx, msg, fields)
}

// Warnf provides a mock function with given fields: ctx, format, args
func (_m *LogInterface) Warnf(ctx context.Context, format string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, ctx, format)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

// WarnfWithFields provides a mock function with given fields: ctx, format, fields, args
func (_m *LogInterface) WarnfWithFields(ctx context.Context, format string, fields logger.FieldsSet, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, ctx, format, fields)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}
