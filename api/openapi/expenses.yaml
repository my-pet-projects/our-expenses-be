openapi: "3.0.0"
info:
  version: 1.0.0
  title: Our Expenses server
  description: TODO
servers:
  - url: https://{hostname}/api
    variables:
      hostname:
        default: localhost
security:
  # - bearerAuth: []
paths:
  /expenses:    
    post:
      summary: Creates a new expense
      description: Creates a new expense in the system.
      operationId: addExpense
      requestBody:
        description: Expense to add to the system
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewExpense'
      responses:
        '200':
          description: Expense response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewExpenseResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reports:    
    get:
      summary: Generates expense repose
      description: Generates expense report.
      operationId: generateReport
      parameters:
        - name: from
          in: query
          description: from date to filter by
          required: true
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: to date to filter by
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Expense report response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseReport'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'  
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Expense:
      allOf:
        - $ref: '#/components/schemas/NewExpense'
        - required:
            - id
            - category
          properties:
            id:
              type: string
              format: uuid
              description: Unique id of the expense
            category:
              $ref: '#/components/schemas/Category'
    NewExpense:
      type: object
      required:
        - categoryId
        - price
        - quantity
        - currency
        - date
      properties:
        categoryId:
          type: string
          format: uuid
          description: Category ID of the expense
        price:
          type: number
          format: double
        quantity:
          type: number
          format: double
        currency:
          type: string
        comment:
          type: string
        trip:
          type: string
        date:
          type: string
          format: date-time
    NewExpenseResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: ID of the newly added expense
    ExpenseReport:
      type: object
      required:
        - dateReports
        - total
      properties:
        dateReports:
          type: array
          items:
            $ref: '#/components/schemas/DateCategoryReport'
        total:
          $ref: '#/components/schemas/Total'
    DateCategoryReport:
      type: object
      required:
        - date
        - categoryReports
        - total
      properties:
        date:
          type: string
          format: date-time
        categoryReports:
          type: array
          items:
            $ref: '#/components/schemas/CategoryReport'
        total:
          $ref: '#/components/schemas/Total'
    CategoryReport:
      type: object
      required:
        - category
        - total
      properties:
        category:
          $ref: '#/components/schemas/Category'
        expenses:
          type: array
          items:
            $ref: '#/components/schemas/Expense'
        children:
          type: array
          items:
            $ref: '#/components/schemas/CategoryReport'
        total:
          $ref: '#/components/schemas/Total'
    Category:
      type: object
      required:
        - id
        - name
        - path
        - level
        - parents
      properties:
        id:
          type: string
          format: uuid
          description: Unique id of the category
        name:
          type: string
          description: Name of the category
        icon:
          type: string
        level:
          type: integer
        parents:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    Total:
      type: object
      required:
        - sum
        - debug
      properties:
        sum:
          type: string
          description: Sum amount
        debug:
          type: string
          description: Property to debug sum 
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message




